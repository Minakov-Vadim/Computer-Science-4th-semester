Семенар 1
° (5 6.) Какие концепции лежат в основе стандартной библиотеки?
1) Она поставляется вместе с компилятором
2) Переносимость
3) Компактность/эффективность
4) Связывание 

° (5 б.) Зачем в проектах используются системы контроля версий?
Их использование упрощает удаленную работу в команде. Сразу несколько
программистов могут работать над проектом и моментально узнавать о доработках 
друг друга.

° (5 б.) Из каких основных действий состоит взаимодействие с Git?
Основные действия:
1) clone-клонировать удаленный репозиторий
2) commit-добавляет изменения в локальный репозиторий
3) push-отправляет локальный репозиторий в удаленный
4) pull-скачивает обновленный удаленный репозиторий

° (5 6.) Когда следует создавать отдельные ветки для разработки?
Допустим у вас приложение которым пользуются люди. Не будете же вы делать изменения прямо в этом приложении?
Вы сделаете ветку от мастера и будете делать изменения там, а когда обновление будет готово, вы вольете ветку в мастера.

° (5 6.) Какие основные элементы содержатся в библиотеке chrono?
1) Интервалы времени
2) Моменты времени
3) Таймеры
4) Псевдоним

Семенар 2
° (5.6.) В каких ситуациях применяются типы std: pair и std::tuple?
std: pair В ассоциативных массивах
std::tuple В обобщенных библиотеках

° (5 6.) Когда следует использовать контейнер std:array?
На этапе компиляции если мы знаем тип и количество элементов, то мы 
используем std:array

° (5 6.) Когда следует использовать контейнер std:vector?
stdl:vector - безопасная замена динамическому массиву.

° (5.6.) Когда следует использовать контейнер std:deque?
Идеально подходит для операций вставок с двух сторон.

° (5 6.) Когда следует использовать контейнер std:list?
Двухсвязный список. Подходит для вставки и удаления элементов в
произвольное место за О(1)

° (5 б.) Когда следует использовать контейнер std:forward_list?
Односвязный список. Используется для экономии памяти.

° (5 б.) Какие адаптеры контейнеров есть в стандартной библиотеке?
Очередь, стек, очередь с преоритетами.

° (5 6.) Когда следует использовать контейнер circular buffer из Boost?
Удобно использовать для хранения истории виксированной длинны, 
когда поступают новые данные.

° (5 6.) Почему контейнер circular buffer из Boost не может войти 
в стандарт?
Потому что может быть, что begin>end

° (5 6.) Какие типы данных для работы с многомерными массивами
вы можете назвать?
boost::multiarray

Семенар 3
° (5 6.) В каких ситуациях используются контейнеры типа множества и отображения?
set - удобен тем, что мы знаем кол-во уникальных элементов, сортирует элементы.
map - удобен для поиска элементов не по индексу, а по ключу.
multiset - тоже что и set, но только с дубликатами.
multimap - тоже что и map, но только с дубликатами

° (5) Каким требованиям должна удовлетворять качественная хэш-функция?
1)Быстро считает хэш
2)Детерменированность
3)Равномерность

° (5 6.) Из-за чего в хэш-таблицах возникают коллизии и как можно их разрешать?
Из-за того что хэш у хеш-функций ограничен, у разных элементов 
может быть одинаковых хэш. Метод цепочек разрешает коллизии.

° (5 б.) Почему сложность основных операций хэш-таблиц в худшем случае O(N)?
1)Если у нас коллизия, то нам придется искать элемент в листе, а это в
худжем случае О(n).
2)Вставка, при вставке k-го элемента можем быть перехэштрование, а это О(n).

° (5 6.) В чем заключается преимущество интерфейсов контейнера Boost Multiindex?
1)Контейнеры с множественными интерфейсами
2)Разные наборы индексов






